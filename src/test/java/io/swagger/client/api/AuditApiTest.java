/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AuditResultResponse;
import io.swagger.client.model.DefectDetailResponse;
import io.swagger.client.model.DefectLineResponse;
import java.io.File;
import io.swagger.client.model.FileWithDefectsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuditApi
 */
@Ignore
public class AuditApiTest {

    private final AuditApi api = new AuditApi();

    
    /**
     * Get audit result PDF report
     *
     * Obtains an audit report of the specified delivery in PDF format. It is necessary an analysis code or an application name and change request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateAuditResultReportTest() throws ApiException {
        String code = null;
        String application = null;
        String changeRequest = null;
        String deliveryLabel = null;
        File response = api.generateAuditResultReport(code, application, changeRequest, deliveryLabel);

        // TODO: test validations
    }
    
    /**
     * Get audit result defects
     *
     * Get defects of an audit result
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAuditDefectsTest() throws ApiException {
        String deliveryCode = null;
        String characteristics = null;
        String languages = null;
        String priorities = null;
        String fileContains = null;
        String orderBy = null;
        Boolean asc = null;
        Integer limit = null;
        List<DefectDetailResponse> response = api.getAuditDefects(deliveryCode, characteristics, languages, priorities, fileContains, orderBy, asc, limit);

        // TODO: test validations
    }
    
    /**
     * Get audit result
     *
     * Get an audit result with defects count by priority
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAuditResultTest() throws ApiException {
        String deliveryCode = null;
        AuditResultResponse response = api.getAuditResult(deliveryCode);

        // TODO: test validations
    }
    
    /**
     * Get list of files
     *
     * List files with a violated rule of an audit
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFilesWithGETTest() throws ApiException {
        String application = null;
        String deliveryCode = null;
        String ruleCode = null;
        String checkpoint = null;
        List<FileWithDefectsResponse> response = api.getFilesWithGET(application, deliveryCode, ruleCode, checkpoint);

        // TODO: test validations
    }
    
    /**
     * Get list of defects of file
     *
     * List defects in a file
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLinesWithGETTest() throws ApiException {
        String application = null;
        String deliveryCode = null;
        String ruleCode = null;
        String file = null;
        String checkpoint = null;
        List<DefectLineResponse> response = api.getLinesWithGET(application, deliveryCode, ruleCode, file, checkpoint);

        // TODO: test validations
    }
    
}
