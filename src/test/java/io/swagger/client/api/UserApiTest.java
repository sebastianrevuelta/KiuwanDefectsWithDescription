/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ApplicationRoleData;
import io.swagger.client.model.PortfolioRoleData;
import io.swagger.client.model.UserAppsPermissionsResponse;
import io.swagger.client.model.UserDetailResponse;
import io.swagger.client.model.UserManagementRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Create user
     *
     * Creates a new user in your account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        UserManagementRequest body = null;
        api.createUser(body);

        // TODO: test validations
    }
    
    /**
     * Delete user
     *
     * Delete a user of your account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String username = null;
        api.deleteUser(username);

        // TODO: test validations
    }
    
    /**
     * Get applications roles by user
     *
     * List the applications roles for the username. Use &#39;applicationName&#39; and &#39;exactApplicationName&#39; to filter results.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserApplicationsRolesTest() throws ApiException {
        String username = null;
        String applicationName = null;
        Boolean exactApplicationName = null;
        List<ApplicationRoleData> response = api.getUserApplicationsRoles(username, applicationName, exactApplicationName);

        // TODO: test validations
    }
    
    /**
     * Get portfolios roles by user
     *
     * List the portfolios roles for the username. Use &#39;portfolioName&#39;, &#39;exactPortfolioName&#39;, &#39;portfolioValue&#39; and &#39;exactPortfolioValue&#39; to filter results.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserPortfoliosRolesTest() throws ApiException {
        String username = null;
        String portfolioName = null;
        Boolean exactPortfolioName = null;
        String portfolioValue = null;
        Boolean exactPortfolioValue = null;
        List<PortfolioRoleData> response = api.getUserPortfoliosRoles(username, portfolioName, exactPortfolioName, portfolioValue, exactPortfolioValue);

        // TODO: test validations
    }
    
    /**
     * Get list of users
     *
     * List the users of your account. Use &#39;username&#39; and &#39;emailAddress&#39; (logical AND) to filter results.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsersTest() throws ApiException {
        String username = null;
        Boolean exactUsername = null;
        String emailAddress = null;
        List<UserDetailResponse> response = api.listUsers(username, exactUsername, emailAddress);

        // TODO: test validations
    }
    
    /**
     * Get list of users and application permissions
     *
     * List the users of your account with their application permissions. Use &#39;username&#39; and &#39;emailAddress&#39; and &#39;applicationName&#39; (logical AND) to filter results.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsersWithPermissionsTest() throws ApiException {
        String username = null;
        String emailAddress = null;
        String applicationName = null;
        Boolean exactUsername = null;
        Boolean exactApplicationName = null;
        List<UserAppsPermissionsResponse> response = api.listUsersWithPermissions(username, emailAddress, applicationName, exactUsername, exactApplicationName);

        // TODO: test validations
    }
    
    /**
     * Update user
     *
     * Modifies the information of an user in your account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        UserManagementRequest body = null;
        String username = null;
        api.updateUser(body, username);

        // TODO: test validations
    }
    
}
