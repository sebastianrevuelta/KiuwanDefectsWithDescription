/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DefectLineResponse;
import io.swagger.client.model.DefectNoteResponse;
import io.swagger.client.model.FileWithDefectsResponse;
import io.swagger.client.model.ViolatedRuleResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefectApi
 */
@Ignore
public class DefectApiTest {

    private final DefectApi api = new DefectApi();

    
    /**
     * Get defect notes
     *
     * Obtains the list of notes associated to this defect.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDefectNotesTest() throws ApiException {
        Long defectId = null;
        List<DefectNoteResponse> response = api.getDefectNotes(defectId);

        // TODO: test validations
    }
    
    /**
     * Get defects of file
     *
     * Obtains the list of defects in a file for a concrete violated rule.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getViolatedRuleFileDefectsViaGETTest() throws ApiException {
        String application = null;
        String analysisCode = null;
        String ruleCode = null;
        String file = null;
        List<DefectLineResponse> response = api.getViolatedRuleFileDefectsViaGET(application, analysisCode, ruleCode, file);

        // TODO: test validations
    }
    
    /**
     * Get files of a violated rule
     *
     * Obtains the list of files where the violated rule affects.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getViolatedRuleFilesViaGETTest() throws ApiException {
        String application = null;
        String analysisCode = null;
        String ruleCode = null;
        List<FileWithDefectsResponse> response = api.getViolatedRuleFilesViaGET(application, analysisCode, ruleCode);

        // TODO: test validations
    }
    
    /**
     * Get violated rules of an analysis
     *
     * Obtains the list of violated rules of an analysis for the authenticated user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getViolatedRulesTest() throws ApiException {
        String application = null;
        String analysisCode = null;
        String characteristic = null;
        String language = null;
        String priority = null;
        String vulnerabilityType = null;
        String tag = null;
        Boolean onlyCodeSecurity = null;
        List<ViolatedRuleResponse> response = api.getViolatedRules(application, analysisCode, characteristic, language, priority, vulnerabilityType, tag, onlyCodeSecurity);

        // TODO: test validations
    }
    
    /**
     * Create suppresion rule for a defect
     *
     * Create a suppression rule for this defect.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void muteDefectTest() throws ApiException {
        Long defectId = null;
        String why = null;
        String comment = null;
        api.muteDefect(defectId, why, comment);

        // TODO: test validations
    }
    
    /**
     * Update the status of a defect
     *
     * Update status of this defect and add a note, possible status are (NONE, TO_REVIEW, REVIEWED)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateStatusTest() throws ApiException {
        Long defectId = null;
        String status = null;
        String note = null;
        api.updateStatus(defectId, status, note);

        // TODO: test validations
    }
    
}
