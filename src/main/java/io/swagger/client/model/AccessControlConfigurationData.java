/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ApplicationRoleData;
import io.swagger.client.model.BusinessValuePortfolioRoleData;
import io.swagger.client.model.PortfolioRoleData;
import io.swagger.client.model.ProviderPortfolioRoleData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AccessControlConfigurationData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class AccessControlConfigurationData {
  /**
   * Indicates how to update the permissions. Can be ADD, DELETE or OVERWRITE.
   */
  @JsonAdapter(AssignmentModeEnum.Adapter.class)
  public enum AssignmentModeEnum {
    ADD("ADD"),
    
    DELETE("DELETE"),
    
    OVERWRITE("OVERWRITE");

    private String value;

    AssignmentModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AssignmentModeEnum fromValue(String text) {
      for (AssignmentModeEnum b : AssignmentModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AssignmentModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssignmentModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AssignmentModeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AssignmentModeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("assignmentMode")
  private AssignmentModeEnum assignmentMode = null;

  @SerializedName("overrideUserGroupConfig")
  private Boolean overrideUserGroupConfig = null;

  @SerializedName("managementFeatures")
  private List<String> managementFeatures = null;

  @SerializedName("portfolioRoles")
  private List<PortfolioRoleData> portfolioRoles = null;

  @SerializedName("applicationRoles")
  private List<ApplicationRoleData> applicationRoles = null;

  @SerializedName("businessValueRoles")
  private List<BusinessValuePortfolioRoleData> businessValueRoles = null;

  @SerializedName("providerRoles")
  private List<ProviderPortfolioRoleData> providerRoles = null;

  public AccessControlConfigurationData assignmentMode(AssignmentModeEnum assignmentMode) {
    this.assignmentMode = assignmentMode;
    return this;
  }

   /**
   * Indicates how to update the permissions. Can be ADD, DELETE or OVERWRITE.
   * @return assignmentMode
  **/
  @ApiModelProperty(example = "OVERWRITE", value = "Indicates how to update the permissions. Can be ADD, DELETE or OVERWRITE.")
  public AssignmentModeEnum getAssignmentMode() {
    return assignmentMode;
  }

  public void setAssignmentMode(AssignmentModeEnum assignmentMode) {
    this.assignmentMode = assignmentMode;
  }

  public AccessControlConfigurationData overrideUserGroupConfig(Boolean overrideUserGroupConfig) {
    this.overrideUserGroupConfig = overrideUserGroupConfig;
    return this;
  }

   /**
   * Indicates if override user group config or not
   * @return overrideUserGroupConfig
  **/
  @ApiModelProperty(example = "true", value = "Indicates if override user group config or not")
  public Boolean isOverrideUserGroupConfig() {
    return overrideUserGroupConfig;
  }

  public void setOverrideUserGroupConfig(Boolean overrideUserGroupConfig) {
    this.overrideUserGroupConfig = overrideUserGroupConfig;
  }

  public AccessControlConfigurationData managementFeatures(List<String> managementFeatures) {
    this.managementFeatures = managementFeatures;
    return this;
  }

  public AccessControlConfigurationData addManagementFeaturesItem(String managementFeaturesItem) {
    if (this.managementFeatures == null) {
      this.managementFeatures = new ArrayList<String>();
    }
    this.managementFeatures.add(managementFeaturesItem);
    return this;
  }

   /**
   * Management features to enable/disable. Allowed values are { MANAGE_APPLICATIONS | MANAGE_ALL_USERS | MANAGE_MODELS }
   * @return managementFeatures
  **/
  @ApiModelProperty(example = "\"['MANAGE_APPLICATIONS','MANAGE_MODELS']\"", value = "Management features to enable/disable. Allowed values are { MANAGE_APPLICATIONS | MANAGE_ALL_USERS | MANAGE_MODELS }")
  public List<String> getManagementFeatures() {
    return managementFeatures;
  }

  public void setManagementFeatures(List<String> managementFeatures) {
    this.managementFeatures = managementFeatures;
  }

  public AccessControlConfigurationData portfolioRoles(List<PortfolioRoleData> portfolioRoles) {
    this.portfolioRoles = portfolioRoles;
    return this;
  }

  public AccessControlConfigurationData addPortfolioRolesItem(PortfolioRoleData portfolioRolesItem) {
    if (this.portfolioRoles == null) {
      this.portfolioRoles = new ArrayList<PortfolioRoleData>();
    }
    this.portfolioRoles.add(portfolioRolesItem);
    return this;
  }

   /**
   * Portfolio roles list
   * @return portfolioRoles
  **/
  @ApiModelProperty(value = "Portfolio roles list")
  public List<PortfolioRoleData> getPortfolioRoles() {
    return portfolioRoles;
  }

  public void setPortfolioRoles(List<PortfolioRoleData> portfolioRoles) {
    this.portfolioRoles = portfolioRoles;
  }

  public AccessControlConfigurationData applicationRoles(List<ApplicationRoleData> applicationRoles) {
    this.applicationRoles = applicationRoles;
    return this;
  }

  public AccessControlConfigurationData addApplicationRolesItem(ApplicationRoleData applicationRolesItem) {
    if (this.applicationRoles == null) {
      this.applicationRoles = new ArrayList<ApplicationRoleData>();
    }
    this.applicationRoles.add(applicationRolesItem);
    return this;
  }

   /**
   * Application roles list
   * @return applicationRoles
  **/
  @ApiModelProperty(value = "Application roles list")
  public List<ApplicationRoleData> getApplicationRoles() {
    return applicationRoles;
  }

  public void setApplicationRoles(List<ApplicationRoleData> applicationRoles) {
    this.applicationRoles = applicationRoles;
  }

  public AccessControlConfigurationData businessValueRoles(List<BusinessValuePortfolioRoleData> businessValueRoles) {
    this.businessValueRoles = businessValueRoles;
    return this;
  }

  public AccessControlConfigurationData addBusinessValueRolesItem(BusinessValuePortfolioRoleData businessValueRolesItem) {
    if (this.businessValueRoles == null) {
      this.businessValueRoles = new ArrayList<BusinessValuePortfolioRoleData>();
    }
    this.businessValueRoles.add(businessValueRolesItem);
    return this;
  }

   /**
   * Business value portofolio roles list
   * @return businessValueRoles
  **/
  @ApiModelProperty(value = "Business value portofolio roles list")
  public List<BusinessValuePortfolioRoleData> getBusinessValueRoles() {
    return businessValueRoles;
  }

  public void setBusinessValueRoles(List<BusinessValuePortfolioRoleData> businessValueRoles) {
    this.businessValueRoles = businessValueRoles;
  }

  public AccessControlConfigurationData providerRoles(List<ProviderPortfolioRoleData> providerRoles) {
    this.providerRoles = providerRoles;
    return this;
  }

  public AccessControlConfigurationData addProviderRolesItem(ProviderPortfolioRoleData providerRolesItem) {
    if (this.providerRoles == null) {
      this.providerRoles = new ArrayList<ProviderPortfolioRoleData>();
    }
    this.providerRoles.add(providerRolesItem);
    return this;
  }

   /**
   * Provider portfolio roles list
   * @return providerRoles
  **/
  @ApiModelProperty(value = "Provider portfolio roles list")
  public List<ProviderPortfolioRoleData> getProviderRoles() {
    return providerRoles;
  }

  public void setProviderRoles(List<ProviderPortfolioRoleData> providerRoles) {
    this.providerRoles = providerRoles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessControlConfigurationData accessControlConfigurationData = (AccessControlConfigurationData) o;
    return Objects.equals(this.assignmentMode, accessControlConfigurationData.assignmentMode) &&
        Objects.equals(this.overrideUserGroupConfig, accessControlConfigurationData.overrideUserGroupConfig) &&
        Objects.equals(this.managementFeatures, accessControlConfigurationData.managementFeatures) &&
        Objects.equals(this.portfolioRoles, accessControlConfigurationData.portfolioRoles) &&
        Objects.equals(this.applicationRoles, accessControlConfigurationData.applicationRoles) &&
        Objects.equals(this.businessValueRoles, accessControlConfigurationData.businessValueRoles) &&
        Objects.equals(this.providerRoles, accessControlConfigurationData.providerRoles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignmentMode, overrideUserGroupConfig, managementFeatures, portfolioRoles, applicationRoles, businessValueRoles, providerRoles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessControlConfigurationData {\n");
    
    sb.append("    assignmentMode: ").append(toIndentedString(assignmentMode)).append("\n");
    sb.append("    overrideUserGroupConfig: ").append(toIndentedString(overrideUserGroupConfig)).append("\n");
    sb.append("    managementFeatures: ").append(toIndentedString(managementFeatures)).append("\n");
    sb.append("    portfolioRoles: ").append(toIndentedString(portfolioRoles)).append("\n");
    sb.append("    applicationRoles: ").append(toIndentedString(applicationRoles)).append("\n");
    sb.append("    businessValueRoles: ").append(toIndentedString(businessValueRoles)).append("\n");
    sb.append("    providerRoles: ").append(toIndentedString(providerRoles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

