/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DatapathData;
import io.swagger.client.model.FrameData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VulnerabilityData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class VulnerabilityData {
  @SerializedName("cweId")
  private Integer cweId = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("resource")
  private String resource = null;

  @SerializedName("container")
  private String container = null;

  @SerializedName("injectionPoint")
  private String injectionPoint = null;

  @SerializedName("variableDeclaration")
  private String variableDeclaration = null;

  @SerializedName("sourceFile")
  private String sourceFile = null;

  @SerializedName("sourceLine")
  private Integer sourceLine = null;

  @SerializedName("sourceCode")
  private String sourceCode = null;

  @SerializedName("sourceCategory")
  private String sourceCategory = null;

  @SerializedName("sourceResource")
  private String sourceResource = null;

  @SerializedName("sourceContainer")
  private String sourceContainer = null;

  @SerializedName("sourceInjectionPoint")
  private String sourceInjectionPoint = null;

  @SerializedName("frames")
  private List<FrameData> frames = null;

  @SerializedName("datapaths")
  private List<DatapathData> datapaths = null;

  public VulnerabilityData cweId(Integer cweId) {
    this.cweId = cweId;
    return this;
  }

   /**
   * CWE identifier
   * @return cweId
  **/
  @ApiModelProperty(example = "79", value = "CWE identifier")
  public Integer getCweId() {
    return cweId;
  }

  public void setCweId(Integer cweId) {
    this.cweId = cweId;
  }

  public VulnerabilityData category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Sink category
   * @return category
  **/
  @ApiModelProperty(example = "xss", value = "Sink category")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public VulnerabilityData resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Resource
   * @return resource
  **/
  @ApiModelProperty(example = "web", value = "Resource")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public VulnerabilityData container(String container) {
    this.container = container;
    return this;
  }

   /**
   * Container
   * @return container
  **/
  @ApiModelProperty(example = "executeQuery(java.lang.String,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", value = "Container")
  public String getContainer() {
    return container;
  }

  public void setContainer(String container) {
    this.container = container;
  }

  public VulnerabilityData injectionPoint(String injectionPoint) {
    this.injectionPoint = injectionPoint;
    return this;
  }

   /**
   * InjectionPoint
   * @return injectionPoint
  **/
  @ApiModelProperty(value = "InjectionPoint")
  public String getInjectionPoint() {
    return injectionPoint;
  }

  public void setInjectionPoint(String injectionPoint) {
    this.injectionPoint = injectionPoint;
  }

  public VulnerabilityData variableDeclaration(String variableDeclaration) {
    this.variableDeclaration = variableDeclaration;
    return this;
  }

   /**
   * Variable declaration
   * @return variableDeclaration
  **/
  @ApiModelProperty(example = "String sql", value = "Variable declaration")
  public String getVariableDeclaration() {
    return variableDeclaration;
  }

  public void setVariableDeclaration(String variableDeclaration) {
    this.variableDeclaration = variableDeclaration;
  }

  public VulnerabilityData sourceFile(String sourceFile) {
    this.sourceFile = sourceFile;
    return this;
  }

   /**
   * Source file
   * @return sourceFile
  **/
  @ApiModelProperty(example = "FileSystemRepository.java", value = "Source file")
  public String getSourceFile() {
    return sourceFile;
  }

  public void setSourceFile(String sourceFile) {
    this.sourceFile = sourceFile;
  }

  public VulnerabilityData sourceLine(Integer sourceLine) {
    this.sourceLine = sourceLine;
    return this;
  }

   /**
   * Source line
   * @return sourceLine
  **/
  @ApiModelProperty(example = "70", value = "Source line")
  public Integer getSourceLine() {
    return sourceLine;
  }

  public void setSourceLine(Integer sourceLine) {
    this.sourceLine = sourceLine;
  }

  public VulnerabilityData sourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
    return this;
  }

   /**
   * Source code
   * @return sourceCode
  **/
  @ApiModelProperty(example = "   String val = request.getParameter(item);", value = "Source code")
  public String getSourceCode() {
    return sourceCode;
  }

  public void setSourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
  }

  public VulnerabilityData sourceCategory(String sourceCategory) {
    this.sourceCategory = sourceCategory;
    return this;
  }

   /**
   * Source category
   * @return sourceCategory
  **/
  @ApiModelProperty(example = "user_input", value = "Source category")
  public String getSourceCategory() {
    return sourceCategory;
  }

  public void setSourceCategory(String sourceCategory) {
    this.sourceCategory = sourceCategory;
  }

  public VulnerabilityData sourceResource(String sourceResource) {
    this.sourceResource = sourceResource;
    return this;
  }

   /**
   * Source resource
   * @return sourceResource
  **/
  @ApiModelProperty(example = "web", value = "Source resource")
  public String getSourceResource() {
    return sourceResource;
  }

  public void setSourceResource(String sourceResource) {
    this.sourceResource = sourceResource;
  }

  public VulnerabilityData sourceContainer(String sourceContainer) {
    this.sourceContainer = sourceContainer;
    return this;
  }

   /**
   * Source container
   * @return sourceContainer
  **/
  @ApiModelProperty(example = "java.util.Map sanitizeNull(java.util.List,javax.servlet.http.HttpServletRequest)", value = "Source container")
  public String getSourceContainer() {
    return sourceContainer;
  }

  public void setSourceContainer(String sourceContainer) {
    this.sourceContainer = sourceContainer;
  }

  public VulnerabilityData sourceInjectionPoint(String sourceInjectionPoint) {
    this.sourceInjectionPoint = sourceInjectionPoint;
    return this;
  }

   /**
   * Source injection point
   * @return sourceInjectionPoint
  **/
  @ApiModelProperty(value = "Source injection point")
  public String getSourceInjectionPoint() {
    return sourceInjectionPoint;
  }

  public void setSourceInjectionPoint(String sourceInjectionPoint) {
    this.sourceInjectionPoint = sourceInjectionPoint;
  }

  public VulnerabilityData frames(List<FrameData> frames) {
    this.frames = frames;
    return this;
  }

  public VulnerabilityData addFramesItem(FrameData framesItem) {
    if (this.frames == null) {
      this.frames = new ArrayList<FrameData>();
    }
    this.frames.add(framesItem);
    return this;
  }

   /**
   * Vulnerability frames
   * @return frames
  **/
  @ApiModelProperty(value = "Vulnerability frames")
  public List<FrameData> getFrames() {
    return frames;
  }

  public void setFrames(List<FrameData> frames) {
    this.frames = frames;
  }

  public VulnerabilityData datapaths(List<DatapathData> datapaths) {
    this.datapaths = datapaths;
    return this;
  }

  public VulnerabilityData addDatapathsItem(DatapathData datapathsItem) {
    if (this.datapaths == null) {
      this.datapaths = new ArrayList<DatapathData>();
    }
    this.datapaths.add(datapathsItem);
    return this;
  }

   /**
   * Vulnerability datapaths
   * @return datapaths
  **/
  @ApiModelProperty(value = "Vulnerability datapaths")
  public List<DatapathData> getDatapaths() {
    return datapaths;
  }

  public void setDatapaths(List<DatapathData> datapaths) {
    this.datapaths = datapaths;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityData vulnerabilityData = (VulnerabilityData) o;
    return Objects.equals(this.cweId, vulnerabilityData.cweId) &&
        Objects.equals(this.category, vulnerabilityData.category) &&
        Objects.equals(this.resource, vulnerabilityData.resource) &&
        Objects.equals(this.container, vulnerabilityData.container) &&
        Objects.equals(this.injectionPoint, vulnerabilityData.injectionPoint) &&
        Objects.equals(this.variableDeclaration, vulnerabilityData.variableDeclaration) &&
        Objects.equals(this.sourceFile, vulnerabilityData.sourceFile) &&
        Objects.equals(this.sourceLine, vulnerabilityData.sourceLine) &&
        Objects.equals(this.sourceCode, vulnerabilityData.sourceCode) &&
        Objects.equals(this.sourceCategory, vulnerabilityData.sourceCategory) &&
        Objects.equals(this.sourceResource, vulnerabilityData.sourceResource) &&
        Objects.equals(this.sourceContainer, vulnerabilityData.sourceContainer) &&
        Objects.equals(this.sourceInjectionPoint, vulnerabilityData.sourceInjectionPoint) &&
        Objects.equals(this.frames, vulnerabilityData.frames) &&
        Objects.equals(this.datapaths, vulnerabilityData.datapaths);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cweId, category, resource, container, injectionPoint, variableDeclaration, sourceFile, sourceLine, sourceCode, sourceCategory, sourceResource, sourceContainer, sourceInjectionPoint, frames, datapaths);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityData {\n");
    
    sb.append("    cweId: ").append(toIndentedString(cweId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    injectionPoint: ").append(toIndentedString(injectionPoint)).append("\n");
    sb.append("    variableDeclaration: ").append(toIndentedString(variableDeclaration)).append("\n");
    sb.append("    sourceFile: ").append(toIndentedString(sourceFile)).append("\n");
    sb.append("    sourceLine: ").append(toIndentedString(sourceLine)).append("\n");
    sb.append("    sourceCode: ").append(toIndentedString(sourceCode)).append("\n");
    sb.append("    sourceCategory: ").append(toIndentedString(sourceCategory)).append("\n");
    sb.append("    sourceResource: ").append(toIndentedString(sourceResource)).append("\n");
    sb.append("    sourceContainer: ").append(toIndentedString(sourceContainer)).append("\n");
    sb.append("    sourceInjectionPoint: ").append(toIndentedString(sourceInjectionPoint)).append("\n");
    sb.append("    frames: ").append(toIndentedString(frames)).append("\n");
    sb.append("    datapaths: ").append(toIndentedString(datapaths)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

