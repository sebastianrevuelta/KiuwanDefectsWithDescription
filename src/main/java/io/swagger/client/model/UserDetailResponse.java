/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UserDetailResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class UserDetailResponse {
  @SerializedName("username")
  private String username = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("isOwner")
  private Boolean isOwner = null;

  @SerializedName("enableLoginWithPassword")
  private Boolean enableLoginWithPassword = null;

  public UserDetailResponse username(String username) {
    this.username = username;
    return this;
  }

   /**
   * User name
   * @return username
  **/
  @ApiModelProperty(example = "john.smith@myCompany.com", value = "User name")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public UserDetailResponse firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * User first name
   * @return firstName
  **/
  @ApiModelProperty(example = "John", value = "User first name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UserDetailResponse lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * User last name
   * @return lastName
  **/
  @ApiModelProperty(example = "Smith", value = "User last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UserDetailResponse enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates if the user is enabled or not
   * @return enabled
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user is enabled or not")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public UserDetailResponse email(String email) {
    this.email = email;
    return this;
  }

   /**
   * User email
   * @return email
  **/
  @ApiModelProperty(example = "john.smith@myCompany.com", value = "User email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserDetailResponse isOwner(Boolean isOwner) {
    this.isOwner = isOwner;
    return this;
  }

   /**
   * Indicates if the user is the account owner
   * @return isOwner
  **/
  @ApiModelProperty(example = "false", value = "Indicates if the user is the account owner")
  public Boolean isIsOwner() {
    return isOwner;
  }

  public void setIsOwner(Boolean isOwner) {
    this.isOwner = isOwner;
  }

  public UserDetailResponse enableLoginWithPassword(Boolean enableLoginWithPassword) {
    this.enableLoginWithPassword = enableLoginWithPassword;
    return this;
  }

   /**
   * Indicates if the user has enable login with password
   * @return enableLoginWithPassword
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user has enable login with password")
  public Boolean isEnableLoginWithPassword() {
    return enableLoginWithPassword;
  }

  public void setEnableLoginWithPassword(Boolean enableLoginWithPassword) {
    this.enableLoginWithPassword = enableLoginWithPassword;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDetailResponse userDetailResponse = (UserDetailResponse) o;
    return Objects.equals(this.username, userDetailResponse.username) &&
        Objects.equals(this.firstName, userDetailResponse.firstName) &&
        Objects.equals(this.lastName, userDetailResponse.lastName) &&
        Objects.equals(this.enabled, userDetailResponse.enabled) &&
        Objects.equals(this.email, userDetailResponse.email) &&
        Objects.equals(this.isOwner, userDetailResponse.isOwner) &&
        Objects.equals(this.enableLoginWithPassword, userDetailResponse.enableLoginWithPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, firstName, lastName, enabled, email, isOwner, enableLoginWithPassword);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDetailResponse {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    isOwner: ").append(toIndentedString(isOwner)).append("\n");
    sb.append("    enableLoginWithPassword: ").append(toIndentedString(enableLoginWithPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

