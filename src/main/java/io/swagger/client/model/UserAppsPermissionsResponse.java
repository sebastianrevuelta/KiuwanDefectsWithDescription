/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ApplicationPermissionsData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * UserAppsPermissionsResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class UserAppsPermissionsResponse {
  @SerializedName("username")
  private String username = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("managementFeatures")
  private List<String> managementFeatures = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("supportEnabled")
  private Boolean supportEnabled = null;

  @SerializedName("overrideUserGroup")
  private Boolean overrideUserGroup = null;

  @SerializedName("manageApplications")
  private Boolean manageApplications = null;

  @SerializedName("manageUsers")
  private Boolean manageUsers = null;

  @SerializedName("manageModels")
  private Boolean manageModels = null;

  @SerializedName("manageAudits")
  private Boolean manageAudits = null;

  @SerializedName("manageReports")
  private Boolean manageReports = null;

  @SerializedName("applicationPermissionsData")
  private List<ApplicationPermissionsData> applicationPermissionsData = null;

  public UserAppsPermissionsResponse username(String username) {
    this.username = username;
    return this;
  }

   /**
   * User name
   * @return username
  **/
  @ApiModelProperty(example = "john.smith@myCompany.com", value = "User name")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public UserAppsPermissionsResponse email(String email) {
    this.email = email;
    return this;
  }

   /**
   * User email
   * @return email
  **/
  @ApiModelProperty(example = "john.smith@myCompany.com", value = "User email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserAppsPermissionsResponse firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * User first name
   * @return firstName
  **/
  @ApiModelProperty(example = "John", value = "User first name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UserAppsPermissionsResponse lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * User last name
   * @return lastName
  **/
  @ApiModelProperty(example = "Smith", value = "User last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UserAppsPermissionsResponse managementFeatures(List<String> managementFeatures) {
    this.managementFeatures = managementFeatures;
    return this;
  }

  public UserAppsPermissionsResponse addManagementFeaturesItem(String managementFeaturesItem) {
    if (this.managementFeatures == null) {
      this.managementFeatures = new ArrayList<String>();
    }
    this.managementFeatures.add(managementFeaturesItem);
    return this;
  }

   /**
   * Management features. Allowed values are { MANAGE_APPLICATIONS | MANAGE_ALL_USERS | MANAGE_MODELS }
   * @return managementFeatures
  **/
  @ApiModelProperty(example = "\"['MANAGE_APPLICATIONS','MANAGE_MODELS']\"", value = "Management features. Allowed values are { MANAGE_APPLICATIONS | MANAGE_ALL_USERS | MANAGE_MODELS }")
  public List<String> getManagementFeatures() {
    return managementFeatures;
  }

  public void setManagementFeatures(List<String> managementFeatures) {
    this.managementFeatures = managementFeatures;
  }

  public UserAppsPermissionsResponse enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates if the user is enabled or not
   * @return enabled
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user is enabled or not")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public UserAppsPermissionsResponse supportEnabled(Boolean supportEnabled) {
    this.supportEnabled = supportEnabled;
    return this;
  }

   /**
   * Indicates if the user has the support enabled
   * @return supportEnabled
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user has the support enabled")
  public Boolean isSupportEnabled() {
    return supportEnabled;
  }

  public void setSupportEnabled(Boolean supportEnabled) {
    this.supportEnabled = supportEnabled;
  }

  public UserAppsPermissionsResponse overrideUserGroup(Boolean overrideUserGroup) {
    this.overrideUserGroup = overrideUserGroup;
    return this;
  }

   /**
   * Indicates if the user override group permissions
   * @return overrideUserGroup
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user override group permissions")
  public Boolean isOverrideUserGroup() {
    return overrideUserGroup;
  }

  public void setOverrideUserGroup(Boolean overrideUserGroup) {
    this.overrideUserGroup = overrideUserGroup;
  }

  public UserAppsPermissionsResponse manageApplications(Boolean manageApplications) {
    this.manageApplications = manageApplications;
    return this;
  }

   /**
   * Indicates if the user has permissions to manage applications
   * @return manageApplications
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user has permissions to manage applications")
  public Boolean isManageApplications() {
    return manageApplications;
  }

  public void setManageApplications(Boolean manageApplications) {
    this.manageApplications = manageApplications;
  }

  public UserAppsPermissionsResponse manageUsers(Boolean manageUsers) {
    this.manageUsers = manageUsers;
    return this;
  }

   /**
   * Indicates if the user has permissions to manage users
   * @return manageUsers
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user has permissions to manage users")
  public Boolean isManageUsers() {
    return manageUsers;
  }

  public void setManageUsers(Boolean manageUsers) {
    this.manageUsers = manageUsers;
  }

  public UserAppsPermissionsResponse manageModels(Boolean manageModels) {
    this.manageModels = manageModels;
    return this;
  }

   /**
   * Indicates if the user has permissions to manage models
   * @return manageModels
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user has permissions to manage models")
  public Boolean isManageModels() {
    return manageModels;
  }

  public void setManageModels(Boolean manageModels) {
    this.manageModels = manageModels;
  }

  public UserAppsPermissionsResponse manageAudits(Boolean manageAudits) {
    this.manageAudits = manageAudits;
    return this;
  }

   /**
   * Indicates if the user has permissions to manage audits
   * @return manageAudits
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user has permissions to manage audits")
  public Boolean isManageAudits() {
    return manageAudits;
  }

  public void setManageAudits(Boolean manageAudits) {
    this.manageAudits = manageAudits;
  }

  public UserAppsPermissionsResponse manageReports(Boolean manageReports) {
    this.manageReports = manageReports;
    return this;
  }

   /**
   * Indicates if the user has permissions to manage reports
   * @return manageReports
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the user has permissions to manage reports")
  public Boolean isManageReports() {
    return manageReports;
  }

  public void setManageReports(Boolean manageReports) {
    this.manageReports = manageReports;
  }

  public UserAppsPermissionsResponse applicationPermissionsData(List<ApplicationPermissionsData> applicationPermissionsData) {
    this.applicationPermissionsData = applicationPermissionsData;
    return this;
  }

  public UserAppsPermissionsResponse addApplicationPermissionsDataItem(ApplicationPermissionsData applicationPermissionsDataItem) {
    if (this.applicationPermissionsData == null) {
      this.applicationPermissionsData = new ArrayList<ApplicationPermissionsData>();
    }
    this.applicationPermissionsData.add(applicationPermissionsDataItem);
    return this;
  }

   /**
   * List of applicaction names and their permissions for this user
   * @return applicationPermissionsData
  **/
  @ApiModelProperty(value = "List of applicaction names and their permissions for this user")
  public List<ApplicationPermissionsData> getApplicationPermissionsData() {
    return applicationPermissionsData;
  }

  public void setApplicationPermissionsData(List<ApplicationPermissionsData> applicationPermissionsData) {
    this.applicationPermissionsData = applicationPermissionsData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAppsPermissionsResponse userAppsPermissionsResponse = (UserAppsPermissionsResponse) o;
    return Objects.equals(this.username, userAppsPermissionsResponse.username) &&
        Objects.equals(this.email, userAppsPermissionsResponse.email) &&
        Objects.equals(this.firstName, userAppsPermissionsResponse.firstName) &&
        Objects.equals(this.lastName, userAppsPermissionsResponse.lastName) &&
        Objects.equals(this.managementFeatures, userAppsPermissionsResponse.managementFeatures) &&
        Objects.equals(this.enabled, userAppsPermissionsResponse.enabled) &&
        Objects.equals(this.supportEnabled, userAppsPermissionsResponse.supportEnabled) &&
        Objects.equals(this.overrideUserGroup, userAppsPermissionsResponse.overrideUserGroup) &&
        Objects.equals(this.manageApplications, userAppsPermissionsResponse.manageApplications) &&
        Objects.equals(this.manageUsers, userAppsPermissionsResponse.manageUsers) &&
        Objects.equals(this.manageModels, userAppsPermissionsResponse.manageModels) &&
        Objects.equals(this.manageAudits, userAppsPermissionsResponse.manageAudits) &&
        Objects.equals(this.manageReports, userAppsPermissionsResponse.manageReports) &&
        Objects.equals(this.applicationPermissionsData, userAppsPermissionsResponse.applicationPermissionsData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, email, firstName, lastName, managementFeatures, enabled, supportEnabled, overrideUserGroup, manageApplications, manageUsers, manageModels, manageAudits, manageReports, applicationPermissionsData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAppsPermissionsResponse {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    managementFeatures: ").append(toIndentedString(managementFeatures)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    supportEnabled: ").append(toIndentedString(supportEnabled)).append("\n");
    sb.append("    overrideUserGroup: ").append(toIndentedString(overrideUserGroup)).append("\n");
    sb.append("    manageApplications: ").append(toIndentedString(manageApplications)).append("\n");
    sb.append("    manageUsers: ").append(toIndentedString(manageUsers)).append("\n");
    sb.append("    manageModels: ").append(toIndentedString(manageModels)).append("\n");
    sb.append("    manageAudits: ").append(toIndentedString(manageAudits)).append("\n");
    sb.append("    manageReports: ").append(toIndentedString(manageReports)).append("\n");
    sb.append("    applicationPermissionsData: ").append(toIndentedString(applicationPermissionsData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

