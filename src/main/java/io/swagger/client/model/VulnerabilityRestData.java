/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * VulnerabilityRestData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class VulnerabilityRestData {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("cve")
  private String cve = null;

  @SerializedName("cwe")
  private String cwe = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Vulnerability severity (High, Medium, Low)
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    HIGH("High"),
    
    MEDIUM("Medium"),
    
    LOW("Low");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeverityEnum fromValue(String text) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SeverityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("severity")
  private SeverityEnum severity = null;

  public VulnerabilityRestData id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Vulnerability identifier
   * @return id
  **/
  @ApiModelProperty(example = "108742", value = "Vulnerability identifier")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public VulnerabilityRestData cve(String cve) {
    this.cve = cve;
    return this;
  }

   /**
   * CVE reference (Common Vulnerabilities and Exposures)
   * @return cve
  **/
  @ApiModelProperty(example = "CVE-2018-11039", value = "CVE reference (Common Vulnerabilities and Exposures)")
  public String getCve() {
    return cve;
  }

  public void setCve(String cve) {
    this.cve = cve;
  }

  public VulnerabilityRestData cwe(String cwe) {
    this.cwe = cwe;
    return this;
  }

   /**
   * CWE reference (Common Weakness Enumeration Specification)
   * @return cwe
  **/
  @ApiModelProperty(example = "CWE-20", value = "CWE reference (Common Weakness Enumeration Specification)")
  public String getCwe() {
    return cwe;
  }

  public void setCwe(String cwe) {
    this.cwe = cwe;
  }

  public VulnerabilityRestData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Vulnerability description
   * @return description
  **/
  @ApiModelProperty(example = "Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.", value = "Vulnerability description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VulnerabilityRestData severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Vulnerability severity (High, Medium, Low)
   * @return severity
  **/
  @ApiModelProperty(example = "Low", value = "Vulnerability severity (High, Medium, Low)")
  public SeverityEnum getSeverity() {
    return severity;
  }

  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityRestData vulnerabilityRestData = (VulnerabilityRestData) o;
    return Objects.equals(this.id, vulnerabilityRestData.id) &&
        Objects.equals(this.cve, vulnerabilityRestData.cve) &&
        Objects.equals(this.cwe, vulnerabilityRestData.cwe) &&
        Objects.equals(this.description, vulnerabilityRestData.description) &&
        Objects.equals(this.severity, vulnerabilityRestData.severity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, cve, cwe, description, severity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityRestData {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cve: ").append(toIndentedString(cve)).append("\n");
    sb.append("    cwe: ").append(toIndentedString(cwe)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

