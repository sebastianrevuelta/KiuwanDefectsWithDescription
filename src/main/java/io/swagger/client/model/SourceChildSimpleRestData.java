/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SourceChildSimpleRestData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SourceChildSimpleRestData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class SourceChildSimpleRestData {
  @SerializedName("repository")
  private String repository = null;

  @SerializedName("artifact")
  private String artifact = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("child")
  private List<SourceChildSimpleRestData> child = null;

  public SourceChildSimpleRestData repository(String repository) {
    this.repository = repository;
    return this;
  }

   /**
   * Repository name
   * @return repository
  **/
  @ApiModelProperty(example = "MAVEN", value = "Repository name")
  public String getRepository() {
    return repository;
  }

  public void setRepository(String repository) {
    this.repository = repository;
  }

  public SourceChildSimpleRestData artifact(String artifact) {
    this.artifact = artifact;
    return this;
  }

   /**
   * Source artifact name
   * @return artifact
  **/
  @ApiModelProperty(example = "org.springframework:spring-aop", value = "Source artifact name")
  public String getArtifact() {
    return artifact;
  }

  public void setArtifact(String artifact) {
    this.artifact = artifact;
  }

  public SourceChildSimpleRestData version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Source version
   * @return version
  **/
  @ApiModelProperty(example = "3.2.13.RELEASE", value = "Source version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public SourceChildSimpleRestData child(List<SourceChildSimpleRestData> child) {
    this.child = child;
    return this;
  }

  public SourceChildSimpleRestData addChildItem(SourceChildSimpleRestData childItem) {
    if (this.child == null) {
      this.child = new ArrayList<SourceChildSimpleRestData>();
    }
    this.child.add(childItem);
    return this;
  }

   /**
   * Source childs list
   * @return child
  **/
  @ApiModelProperty(value = "Source childs list")
  public List<SourceChildSimpleRestData> getChild() {
    return child;
  }

  public void setChild(List<SourceChildSimpleRestData> child) {
    this.child = child;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceChildSimpleRestData sourceChildSimpleRestData = (SourceChildSimpleRestData) o;
    return Objects.equals(this.repository, sourceChildSimpleRestData.repository) &&
        Objects.equals(this.artifact, sourceChildSimpleRestData.artifact) &&
        Objects.equals(this.version, sourceChildSimpleRestData.version) &&
        Objects.equals(this.child, sourceChildSimpleRestData.child);
  }

  @Override
  public int hashCode() {
    return Objects.hash(repository, artifact, version, child);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceChildSimpleRestData {\n");
    
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    artifact: ").append(toIndentedString(artifact)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    child: ").append(toIndentedString(child)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

