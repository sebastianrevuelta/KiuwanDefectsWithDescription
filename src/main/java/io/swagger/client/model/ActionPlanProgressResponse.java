/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ActionPlanProgressResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class ActionPlanProgressResponse {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("creation")
  private String creation = null;

  @SerializedName("expiration")
  private String expiration = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("assignedTo")
  private String assignedTo = null;

  @SerializedName("progress")
  private Double progress = null;

  @SerializedName("estimate")
  private String estimate = null;

  @SerializedName("pendingEffort")
  private String pendingEffort = null;

  @SerializedName("purged")
  private Boolean purged = null;

  @SerializedName("riskIndexBefore")
  private Double riskIndexBefore = null;

  @SerializedName("globalIndicatorBefore")
  private Double globalIndicatorBefore = null;

  @SerializedName("effortToTargetBefore")
  private Double effortToTargetBefore = null;

  @SerializedName("qualityIndicatorsBefore")
  private Map<String, Double> qualityIndicatorsBefore = null;

  @SerializedName("riskIndexAfter")
  private Double riskIndexAfter = null;

  @SerializedName("globalIndicatorAfter")
  private Double globalIndicatorAfter = null;

  @SerializedName("effortToTargetAfter")
  private Double effortToTargetAfter = null;

  @SerializedName("qualityIndicatorsAfter")
  private Map<String, Double> qualityIndicatorsAfter = null;

  @SerializedName("metrics")
  private Map<String, Double> metrics = null;

  public ActionPlanProgressResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Action plan name
   * @return name
  **/
  @ApiModelProperty(example = "ActionPlan1", value = "Action plan name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ActionPlanProgressResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Action plan Description
   * @return description
  **/
  @ApiModelProperty(example = "Action Plan for security defects", value = "Action plan Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ActionPlanProgressResponse creation(String creation) {
    this.creation = creation;
    return this;
  }

   /**
   * Creation time
   * @return creation
  **/
  @ApiModelProperty(example = "2019-10-31T14:50:05.227Z", value = "Creation time")
  public String getCreation() {
    return creation;
  }

  public void setCreation(String creation) {
    this.creation = creation;
  }

  public ActionPlanProgressResponse expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Expiration time
   * @return expiration
  **/
  @ApiModelProperty(example = "2019-11-31T14:50:05.227Z", value = "Expiration time")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public ActionPlanProgressResponse createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * User action plan creator
   * @return createdBy
  **/
  @ApiModelProperty(example = "The Boss", value = "User action plan creator")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public ActionPlanProgressResponse assignedTo(String assignedTo) {
    this.assignedTo = assignedTo;
    return this;
  }

   /**
   * User assigned to this action plan
   * @return assignedTo
  **/
  @ApiModelProperty(example = "John Smith", value = "User assigned to this action plan")
  public String getAssignedTo() {
    return assignedTo;
  }

  public void setAssignedTo(String assignedTo) {
    this.assignedTo = assignedTo;
  }

  public ActionPlanProgressResponse progress(Double progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Action plan progress
   * @return progress
  **/
  @ApiModelProperty(example = "32.5", value = "Action plan progress")
  public Double getProgress() {
    return progress;
  }

  public void setProgress(Double progress) {
    this.progress = progress;
  }

  public ActionPlanProgressResponse estimate(String estimate) {
    this.estimate = estimate;
    return this;
  }

   /**
   * Total effort estimated time
   * @return estimate
  **/
  @ApiModelProperty(example = "1h 56m", value = "Total effort estimated time")
  public String getEstimate() {
    return estimate;
  }

  public void setEstimate(String estimate) {
    this.estimate = estimate;
  }

  public ActionPlanProgressResponse pendingEffort(String pendingEffort) {
    this.pendingEffort = pendingEffort;
    return this;
  }

   /**
   * Pending effort estimated time
   * @return pendingEffort
  **/
  @ApiModelProperty(example = "30m", value = "Pending effort estimated time")
  public String getPendingEffort() {
    return pendingEffort;
  }

  public void setPendingEffort(String pendingEffort) {
    this.pendingEffort = pendingEffort;
  }

  public ActionPlanProgressResponse purged(Boolean purged) {
    this.purged = purged;
    return this;
  }

   /**
   * Indicates if the action plan is purged
   * @return purged
  **/
  @ApiModelProperty(example = "false", value = "Indicates if the action plan is purged")
  public Boolean isPurged() {
    return purged;
  }

  public void setPurged(Boolean purged) {
    this.purged = purged;
  }

  public ActionPlanProgressResponse riskIndexBefore(Double riskIndexBefore) {
    this.riskIndexBefore = riskIndexBefore;
    return this;
  }

   /**
   * Risk index before action plan
   * @return riskIndexBefore
  **/
  @ApiModelProperty(example = "19.22", value = "Risk index before action plan")
  public Double getRiskIndexBefore() {
    return riskIndexBefore;
  }

  public void setRiskIndexBefore(Double riskIndexBefore) {
    this.riskIndexBefore = riskIndexBefore;
  }

  public ActionPlanProgressResponse globalIndicatorBefore(Double globalIndicatorBefore) {
    this.globalIndicatorBefore = globalIndicatorBefore;
    return this;
  }

   /**
   * Global indicator before action plan
   * @return globalIndicatorBefore
  **/
  @ApiModelProperty(example = "7.21", value = "Global indicator before action plan")
  public Double getGlobalIndicatorBefore() {
    return globalIndicatorBefore;
  }

  public void setGlobalIndicatorBefore(Double globalIndicatorBefore) {
    this.globalIndicatorBefore = globalIndicatorBefore;
  }

  public ActionPlanProgressResponse effortToTargetBefore(Double effortToTargetBefore) {
    this.effortToTargetBefore = effortToTargetBefore;
    return this;
  }

   /**
   * Effort to target before action plan
   * @return effortToTargetBefore
  **/
  @ApiModelProperty(example = "31.8", value = "Effort to target before action plan")
  public Double getEffortToTargetBefore() {
    return effortToTargetBefore;
  }

  public void setEffortToTargetBefore(Double effortToTargetBefore) {
    this.effortToTargetBefore = effortToTargetBefore;
  }

  public ActionPlanProgressResponse qualityIndicatorsBefore(Map<String, Double> qualityIndicatorsBefore) {
    this.qualityIndicatorsBefore = qualityIndicatorsBefore;
    return this;
  }

  public ActionPlanProgressResponse putQualityIndicatorsBeforeItem(String key, Double qualityIndicatorsBeforeItem) {
    if (this.qualityIndicatorsBefore == null) {
      this.qualityIndicatorsBefore = new HashMap<String, Double>();
    }
    this.qualityIndicatorsBefore.put(key, qualityIndicatorsBeforeItem);
    return this;
  }

   /**
   * Map of quality indicators before action plan
   * @return qualityIndicatorsBefore
  **/
  @ApiModelProperty(example = "\"{'Efficiency':53.21, 'Portability':72.9, 'Maintainability':21.9, 'Reliability':13.12, 'Security':38.32 }\"", value = "Map of quality indicators before action plan")
  public Map<String, Double> getQualityIndicatorsBefore() {
    return qualityIndicatorsBefore;
  }

  public void setQualityIndicatorsBefore(Map<String, Double> qualityIndicatorsBefore) {
    this.qualityIndicatorsBefore = qualityIndicatorsBefore;
  }

  public ActionPlanProgressResponse riskIndexAfter(Double riskIndexAfter) {
    this.riskIndexAfter = riskIndexAfter;
    return this;
  }

   /**
   * Risk index after action plan
   * @return riskIndexAfter
  **/
  @ApiModelProperty(example = "9.3", value = "Risk index after action plan")
  public Double getRiskIndexAfter() {
    return riskIndexAfter;
  }

  public void setRiskIndexAfter(Double riskIndexAfter) {
    this.riskIndexAfter = riskIndexAfter;
  }

  public ActionPlanProgressResponse globalIndicatorAfter(Double globalIndicatorAfter) {
    this.globalIndicatorAfter = globalIndicatorAfter;
    return this;
  }

   /**
   * Global indicator after action plan
   * @return globalIndicatorAfter
  **/
  @ApiModelProperty(example = "23.5", value = "Global indicator after action plan")
  public Double getGlobalIndicatorAfter() {
    return globalIndicatorAfter;
  }

  public void setGlobalIndicatorAfter(Double globalIndicatorAfter) {
    this.globalIndicatorAfter = globalIndicatorAfter;
  }

  public ActionPlanProgressResponse effortToTargetAfter(Double effortToTargetAfter) {
    this.effortToTargetAfter = effortToTargetAfter;
    return this;
  }

   /**
   * Effort to target after action plan
   * @return effortToTargetAfter
  **/
  @ApiModelProperty(example = "8.23", value = "Effort to target after action plan")
  public Double getEffortToTargetAfter() {
    return effortToTargetAfter;
  }

  public void setEffortToTargetAfter(Double effortToTargetAfter) {
    this.effortToTargetAfter = effortToTargetAfter;
  }

  public ActionPlanProgressResponse qualityIndicatorsAfter(Map<String, Double> qualityIndicatorsAfter) {
    this.qualityIndicatorsAfter = qualityIndicatorsAfter;
    return this;
  }

  public ActionPlanProgressResponse putQualityIndicatorsAfterItem(String key, Double qualityIndicatorsAfterItem) {
    if (this.qualityIndicatorsAfter == null) {
      this.qualityIndicatorsAfter = new HashMap<String, Double>();
    }
    this.qualityIndicatorsAfter.put(key, qualityIndicatorsAfterItem);
    return this;
  }

   /**
   * Map of quality indicators after action plan
   * @return qualityIndicatorsAfter
  **/
  @ApiModelProperty(example = "\"{'Efficiency':15.28, 'Portability':7.23, 'Maintainability':71.1, 'Reliability':31.2, 'Security':23.21 }\"", value = "Map of quality indicators after action plan")
  public Map<String, Double> getQualityIndicatorsAfter() {
    return qualityIndicatorsAfter;
  }

  public void setQualityIndicatorsAfter(Map<String, Double> qualityIndicatorsAfter) {
    this.qualityIndicatorsAfter = qualityIndicatorsAfter;
  }

  public ActionPlanProgressResponse metrics(Map<String, Double> metrics) {
    this.metrics = metrics;
    return this;
  }

  public ActionPlanProgressResponse putMetricsItem(String key, Double metricsItem) {
    if (this.metrics == null) {
      this.metrics = new HashMap<String, Double>();
    }
    this.metrics.put(key, metricsItem);
    return this;
  }

   /**
   * Map of action plan metrics
   * @return metrics
  **/
  @ApiModelProperty(value = "Map of action plan metrics")
  public Map<String, Double> getMetrics() {
    return metrics;
  }

  public void setMetrics(Map<String, Double> metrics) {
    this.metrics = metrics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionPlanProgressResponse actionPlanProgressResponse = (ActionPlanProgressResponse) o;
    return Objects.equals(this.name, actionPlanProgressResponse.name) &&
        Objects.equals(this.description, actionPlanProgressResponse.description) &&
        Objects.equals(this.creation, actionPlanProgressResponse.creation) &&
        Objects.equals(this.expiration, actionPlanProgressResponse.expiration) &&
        Objects.equals(this.createdBy, actionPlanProgressResponse.createdBy) &&
        Objects.equals(this.assignedTo, actionPlanProgressResponse.assignedTo) &&
        Objects.equals(this.progress, actionPlanProgressResponse.progress) &&
        Objects.equals(this.estimate, actionPlanProgressResponse.estimate) &&
        Objects.equals(this.pendingEffort, actionPlanProgressResponse.pendingEffort) &&
        Objects.equals(this.purged, actionPlanProgressResponse.purged) &&
        Objects.equals(this.riskIndexBefore, actionPlanProgressResponse.riskIndexBefore) &&
        Objects.equals(this.globalIndicatorBefore, actionPlanProgressResponse.globalIndicatorBefore) &&
        Objects.equals(this.effortToTargetBefore, actionPlanProgressResponse.effortToTargetBefore) &&
        Objects.equals(this.qualityIndicatorsBefore, actionPlanProgressResponse.qualityIndicatorsBefore) &&
        Objects.equals(this.riskIndexAfter, actionPlanProgressResponse.riskIndexAfter) &&
        Objects.equals(this.globalIndicatorAfter, actionPlanProgressResponse.globalIndicatorAfter) &&
        Objects.equals(this.effortToTargetAfter, actionPlanProgressResponse.effortToTargetAfter) &&
        Objects.equals(this.qualityIndicatorsAfter, actionPlanProgressResponse.qualityIndicatorsAfter) &&
        Objects.equals(this.metrics, actionPlanProgressResponse.metrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, creation, expiration, createdBy, assignedTo, progress, estimate, pendingEffort, purged, riskIndexBefore, globalIndicatorBefore, effortToTargetBefore, qualityIndicatorsBefore, riskIndexAfter, globalIndicatorAfter, effortToTargetAfter, qualityIndicatorsAfter, metrics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionPlanProgressResponse {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    creation: ").append(toIndentedString(creation)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    estimate: ").append(toIndentedString(estimate)).append("\n");
    sb.append("    pendingEffort: ").append(toIndentedString(pendingEffort)).append("\n");
    sb.append("    purged: ").append(toIndentedString(purged)).append("\n");
    sb.append("    riskIndexBefore: ").append(toIndentedString(riskIndexBefore)).append("\n");
    sb.append("    globalIndicatorBefore: ").append(toIndentedString(globalIndicatorBefore)).append("\n");
    sb.append("    effortToTargetBefore: ").append(toIndentedString(effortToTargetBefore)).append("\n");
    sb.append("    qualityIndicatorsBefore: ").append(toIndentedString(qualityIndicatorsBefore)).append("\n");
    sb.append("    riskIndexAfter: ").append(toIndentedString(riskIndexAfter)).append("\n");
    sb.append("    globalIndicatorAfter: ").append(toIndentedString(globalIndicatorAfter)).append("\n");
    sb.append("    effortToTargetAfter: ").append(toIndentedString(effortToTargetAfter)).append("\n");
    sb.append("    qualityIndicatorsAfter: ").append(toIndentedString(qualityIndicatorsAfter)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

