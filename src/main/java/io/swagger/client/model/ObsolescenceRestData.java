/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ObsolescenceRestData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class ObsolescenceRestData {
  @SerializedName("component")
  private String component = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("usedVersion")
  private String usedVersion = null;

  @SerializedName("dateUsed")
  private String dateUsed = null;

  @SerializedName("lastVersion")
  private String lastVersion = null;

  @SerializedName("dateLast")
  private String dateLast = null;

  @SerializedName("release")
  private String release = null;

  @SerializedName("outOfDate")
  private String outOfDate = null;

  @SerializedName("timeInactivity")
  private String timeInactivity = null;

  @SerializedName("obsolescenceRisk")
  private String obsolescenceRisk = null;

  /**
   * Component obsolescence risk (High, Medium, Low)
   */
  @JsonAdapter(RiskEnum.Adapter.class)
  public enum RiskEnum {
    HIGH("High"),
    
    MEDIUM("Medium"),
    
    LOW("Low");

    private String value;

    RiskEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RiskEnum fromValue(String text) {
      for (RiskEnum b : RiskEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RiskEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RiskEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RiskEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RiskEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("risk")
  private RiskEnum risk = null;

  @SerializedName("description")
  private String description = null;

  public ObsolescenceRestData component(String component) {
    this.component = component;
    return this;
  }

   /**
   * Component name
   * @return component
  **/
  @ApiModelProperty(example = "commons-logging:commons-logging", value = "Component name")
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }

  public ObsolescenceRestData language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Technology (List of supported technologies in https://www.kiuwan.com/docs/display/K5/Kiuwan+Supported+Technologies)
   * @return language
  **/
  @ApiModelProperty(example = "java", value = "Technology (List of supported technologies in https://www.kiuwan.com/docs/display/K5/Kiuwan+Supported+Technologies)")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public ObsolescenceRestData usedVersion(String usedVersion) {
    this.usedVersion = usedVersion;
    return this;
  }

   /**
   * Component used version
   * @return usedVersion
  **/
  @ApiModelProperty(example = "1.1.3", value = "Component used version")
  public String getUsedVersion() {
    return usedVersion;
  }

  public void setUsedVersion(String usedVersion) {
    this.usedVersion = usedVersion;
  }

  public ObsolescenceRestData dateUsed(String dateUsed) {
    this.dateUsed = dateUsed;
    return this;
  }

   /**
   * Component used version date
   * @return dateUsed
  **/
  @ApiModelProperty(example = "2013/05/16", value = "Component used version date")
  public String getDateUsed() {
    return dateUsed;
  }

  public void setDateUsed(String dateUsed) {
    this.dateUsed = dateUsed;
  }

  public ObsolescenceRestData lastVersion(String lastVersion) {
    this.lastVersion = lastVersion;
    return this;
  }

   /**
   * Component last version
   * @return lastVersion
  **/
  @ApiModelProperty(example = "1.2", value = "Component last version")
  public String getLastVersion() {
    return lastVersion;
  }

  public void setLastVersion(String lastVersion) {
    this.lastVersion = lastVersion;
  }

  public ObsolescenceRestData dateLast(String dateLast) {
    this.dateLast = dateLast;
    return this;
  }

   /**
   * Component last version date
   * @return dateLast
  **/
  @ApiModelProperty(example = "2014/07/05", value = "Component last version date")
  public String getDateLast() {
    return dateLast;
  }

  public void setDateLast(String dateLast) {
    this.dateLast = dateLast;
  }

  public ObsolescenceRestData release(String release) {
    this.release = release;
    return this;
  }

   /**
   * Number of releases between used and last version
   * @return release
  **/
  @ApiModelProperty(example = "1", value = "Number of releases between used and last version")
  public String getRelease() {
    return release;
  }

  public void setRelease(String release) {
    this.release = release;
  }

  public ObsolescenceRestData outOfDate(String outOfDate) {
    this.outOfDate = outOfDate;
    return this;
  }

   /**
   * Number of days between used and last version
   * @return outOfDate
  **/
  @ApiModelProperty(example = "1y 50d", value = "Number of days between used and last version")
  public String getOutOfDate() {
    return outOfDate;
  }

  public void setOutOfDate(String outOfDate) {
    this.outOfDate = outOfDate;
  }

  public ObsolescenceRestData timeInactivity(String timeInactivity) {
    this.timeInactivity = timeInactivity;
    return this;
  }

   /**
   * Number of days from last version date
   * @return timeInactivity
  **/
  @ApiModelProperty(example = "5y 194d", value = "Number of days from last version date")
  public String getTimeInactivity() {
    return timeInactivity;
  }

  public void setTimeInactivity(String timeInactivity) {
    this.timeInactivity = timeInactivity;
  }

  public ObsolescenceRestData obsolescenceRisk(String obsolescenceRisk) {
    this.obsolescenceRisk = obsolescenceRisk;
    return this;
  }

   /**
   * Component obsolescence risk number, between 0-10
   * @return obsolescenceRisk
  **/
  @ApiModelProperty(example = "3.33", value = "Component obsolescence risk number, between 0-10")
  public String getObsolescenceRisk() {
    return obsolescenceRisk;
  }

  public void setObsolescenceRisk(String obsolescenceRisk) {
    this.obsolescenceRisk = obsolescenceRisk;
  }

  public ObsolescenceRestData risk(RiskEnum risk) {
    this.risk = risk;
    return this;
  }

   /**
   * Component obsolescence risk (High, Medium, Low)
   * @return risk
  **/
  @ApiModelProperty(example = "Medium", value = "Component obsolescence risk (High, Medium, Low)")
  public RiskEnum getRisk() {
    return risk;
  }

  public void setRisk(RiskEnum risk) {
    this.risk = risk;
  }

  public ObsolescenceRestData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Component description
   * @return description
  **/
  @ApiModelProperty(example = "Commons Logging is a thin adapter allowing configurable bridging to other,     well known logging systems.", value = "Component description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObsolescenceRestData obsolescenceRestData = (ObsolescenceRestData) o;
    return Objects.equals(this.component, obsolescenceRestData.component) &&
        Objects.equals(this.language, obsolescenceRestData.language) &&
        Objects.equals(this.usedVersion, obsolescenceRestData.usedVersion) &&
        Objects.equals(this.dateUsed, obsolescenceRestData.dateUsed) &&
        Objects.equals(this.lastVersion, obsolescenceRestData.lastVersion) &&
        Objects.equals(this.dateLast, obsolescenceRestData.dateLast) &&
        Objects.equals(this.release, obsolescenceRestData.release) &&
        Objects.equals(this.outOfDate, obsolescenceRestData.outOfDate) &&
        Objects.equals(this.timeInactivity, obsolescenceRestData.timeInactivity) &&
        Objects.equals(this.obsolescenceRisk, obsolescenceRestData.obsolescenceRisk) &&
        Objects.equals(this.risk, obsolescenceRestData.risk) &&
        Objects.equals(this.description, obsolescenceRestData.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(component, language, usedVersion, dateUsed, lastVersion, dateLast, release, outOfDate, timeInactivity, obsolescenceRisk, risk, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObsolescenceRestData {\n");
    
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    usedVersion: ").append(toIndentedString(usedVersion)).append("\n");
    sb.append("    dateUsed: ").append(toIndentedString(dateUsed)).append("\n");
    sb.append("    lastVersion: ").append(toIndentedString(lastVersion)).append("\n");
    sb.append("    dateLast: ").append(toIndentedString(dateLast)).append("\n");
    sb.append("    release: ").append(toIndentedString(release)).append("\n");
    sb.append("    outOfDate: ").append(toIndentedString(outOfDate)).append("\n");
    sb.append("    timeInactivity: ").append(toIndentedString(timeInactivity)).append("\n");
    sb.append("    obsolescenceRisk: ").append(toIndentedString(obsolescenceRisk)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

