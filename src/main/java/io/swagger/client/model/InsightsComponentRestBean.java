/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SourceRootSimpleRestData;
import io.swagger.client.model.VulnerabilityRestData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InsightsComponentRestBean
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class InsightsComponentRestBean {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("artifact")
  private String artifact = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("filename")
  private String filename = null;

  @SerializedName("language")
  private String language = null;

  /**
   * Component obsolescence risk (high, medium, low, none, unknown)
   */
  @JsonAdapter(ObsolescenceRiskEnum.Adapter.class)
  public enum ObsolescenceRiskEnum {
    HIGH("high"),
    
    MEDIUM("medium"),
    
    LOW("low"),
    
    NONE("none"),
    
    UNKNOWN("unknown");

    private String value;

    ObsolescenceRiskEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObsolescenceRiskEnum fromValue(String text) {
      for (ObsolescenceRiskEnum b : ObsolescenceRiskEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ObsolescenceRiskEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObsolescenceRiskEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObsolescenceRiskEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ObsolescenceRiskEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("obsolescenceRisk")
  private ObsolescenceRiskEnum obsolescenceRisk = null;

  /**
   * Component license risk (high, medium, low, none, unknown)
   */
  @JsonAdapter(LicenseRiskEnum.Adapter.class)
  public enum LicenseRiskEnum {
    HIGH("high"),
    
    MEDIUM("medium"),
    
    LOW("low"),
    
    NONE("none"),
    
    UNKNOWN("unknown");

    private String value;

    LicenseRiskEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LicenseRiskEnum fromValue(String text) {
      for (LicenseRiskEnum b : LicenseRiskEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LicenseRiskEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LicenseRiskEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LicenseRiskEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LicenseRiskEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("licenseRisk")
  private LicenseRiskEnum licenseRisk = null;

  /**
   * Component security risk (high, medium, low, none, unknown)
   */
  @JsonAdapter(SecurityRiskEnum.Adapter.class)
  public enum SecurityRiskEnum {
    HIGH("high"),
    
    MEDIUM("medium"),
    
    LOW("low"),
    
    NONE("none"),
    
    UNKNOWN("unknown");

    private String value;

    SecurityRiskEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SecurityRiskEnum fromValue(String text) {
      for (SecurityRiskEnum b : SecurityRiskEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SecurityRiskEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SecurityRiskEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SecurityRiskEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SecurityRiskEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("securityRisk")
  private SecurityRiskEnum securityRisk = null;

  @SerializedName("sources")
  private List<SourceRootSimpleRestData> sources = null;

  @SerializedName("vulnerabilities")
  private List<VulnerabilityRestData> vulnerabilities = null;

  public InsightsComponentRestBean id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Component identifier
   * @return id
  **/
  @ApiModelProperty(example = "178", value = "Component identifier")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InsightsComponentRestBean artifact(String artifact) {
    this.artifact = artifact;
    return this;
  }

   /**
   * Artifact name
   * @return artifact
  **/
  @ApiModelProperty(example = "org.springframework:spring-aop", value = "Artifact name")
  public String getArtifact() {
    return artifact;
  }

  public void setArtifact(String artifact) {
    this.artifact = artifact;
  }

  public InsightsComponentRestBean version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Artifact version
   * @return version
  **/
  @ApiModelProperty(example = "3.2.13.RELEASE", value = "Artifact version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public InsightsComponentRestBean filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * File name
   * @return filename
  **/
  @ApiModelProperty(example = "spring-aop-3.2.13.RELEASE.jar", value = "File name")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public InsightsComponentRestBean language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Technology
   * @return language
  **/
  @ApiModelProperty(example = "java", value = "Technology")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public InsightsComponentRestBean obsolescenceRisk(ObsolescenceRiskEnum obsolescenceRisk) {
    this.obsolescenceRisk = obsolescenceRisk;
    return this;
  }

   /**
   * Component obsolescence risk (high, medium, low, none, unknown)
   * @return obsolescenceRisk
  **/
  @ApiModelProperty(example = "medium", value = "Component obsolescence risk (high, medium, low, none, unknown)")
  public ObsolescenceRiskEnum getObsolescenceRisk() {
    return obsolescenceRisk;
  }

  public void setObsolescenceRisk(ObsolescenceRiskEnum obsolescenceRisk) {
    this.obsolescenceRisk = obsolescenceRisk;
  }

  public InsightsComponentRestBean licenseRisk(LicenseRiskEnum licenseRisk) {
    this.licenseRisk = licenseRisk;
    return this;
  }

   /**
   * Component license risk (high, medium, low, none, unknown)
   * @return licenseRisk
  **/
  @ApiModelProperty(example = "unknown", value = "Component license risk (high, medium, low, none, unknown)")
  public LicenseRiskEnum getLicenseRisk() {
    return licenseRisk;
  }

  public void setLicenseRisk(LicenseRiskEnum licenseRisk) {
    this.licenseRisk = licenseRisk;
  }

  public InsightsComponentRestBean securityRisk(SecurityRiskEnum securityRisk) {
    this.securityRisk = securityRisk;
    return this;
  }

   /**
   * Component security risk (high, medium, low, none, unknown)
   * @return securityRisk
  **/
  @ApiModelProperty(example = "high", value = "Component security risk (high, medium, low, none, unknown)")
  public SecurityRiskEnum getSecurityRisk() {
    return securityRisk;
  }

  public void setSecurityRisk(SecurityRiskEnum securityRisk) {
    this.securityRisk = securityRisk;
  }

  public InsightsComponentRestBean sources(List<SourceRootSimpleRestData> sources) {
    this.sources = sources;
    return this;
  }

  public InsightsComponentRestBean addSourcesItem(SourceRootSimpleRestData sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<SourceRootSimpleRestData>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * Sources list
   * @return sources
  **/
  @ApiModelProperty(value = "Sources list")
  public List<SourceRootSimpleRestData> getSources() {
    return sources;
  }

  public void setSources(List<SourceRootSimpleRestData> sources) {
    this.sources = sources;
  }

  public InsightsComponentRestBean vulnerabilities(List<VulnerabilityRestData> vulnerabilities) {
    this.vulnerabilities = vulnerabilities;
    return this;
  }

  public InsightsComponentRestBean addVulnerabilitiesItem(VulnerabilityRestData vulnerabilitiesItem) {
    if (this.vulnerabilities == null) {
      this.vulnerabilities = new ArrayList<VulnerabilityRestData>();
    }
    this.vulnerabilities.add(vulnerabilitiesItem);
    return this;
  }

   /**
   * Vulnerabilities list
   * @return vulnerabilities
  **/
  @ApiModelProperty(value = "Vulnerabilities list")
  public List<VulnerabilityRestData> getVulnerabilities() {
    return vulnerabilities;
  }

  public void setVulnerabilities(List<VulnerabilityRestData> vulnerabilities) {
    this.vulnerabilities = vulnerabilities;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsightsComponentRestBean insightsComponentRestBean = (InsightsComponentRestBean) o;
    return Objects.equals(this.id, insightsComponentRestBean.id) &&
        Objects.equals(this.artifact, insightsComponentRestBean.artifact) &&
        Objects.equals(this.version, insightsComponentRestBean.version) &&
        Objects.equals(this.filename, insightsComponentRestBean.filename) &&
        Objects.equals(this.language, insightsComponentRestBean.language) &&
        Objects.equals(this.obsolescenceRisk, insightsComponentRestBean.obsolescenceRisk) &&
        Objects.equals(this.licenseRisk, insightsComponentRestBean.licenseRisk) &&
        Objects.equals(this.securityRisk, insightsComponentRestBean.securityRisk) &&
        Objects.equals(this.sources, insightsComponentRestBean.sources) &&
        Objects.equals(this.vulnerabilities, insightsComponentRestBean.vulnerabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, artifact, version, filename, language, obsolescenceRisk, licenseRisk, securityRisk, sources, vulnerabilities);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsightsComponentRestBean {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    artifact: ").append(toIndentedString(artifact)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    obsolescenceRisk: ").append(toIndentedString(obsolescenceRisk)).append("\n");
    sb.append("    licenseRisk: ").append(toIndentedString(licenseRisk)).append("\n");
    sb.append("    securityRisk: ").append(toIndentedString(securityRisk)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    vulnerabilities: ").append(toIndentedString(vulnerabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

