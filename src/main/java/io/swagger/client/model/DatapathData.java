/*
 * Kiuwan REST API
 * Kiuwan REST API specification
 *
 * OpenAPI spec version: 2.8.2004.3-SNAPSHOT
 * Contact: support@kiuwan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DatapathData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-14T08:41:48.057Z")
public class DatapathData {
  @SerializedName("index")
  private Integer index = null;

  /**
   * Datapath kind
   */
  @JsonAdapter(KindEnum.Adapter.class)
  public enum KindEnum {
    ASSIGN("assign"),
    
    CALL("call"),
    
    OTHER("other"),
    
    SINK("sink"),
    
    SOURCE("source");

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KindEnum fromValue(String text) {
      for (KindEnum b : KindEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<KindEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KindEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KindEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return KindEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("kind")
  private KindEnum kind = null;

  @SerializedName("varname")
  private String varname = null;

  @SerializedName("lineNumber")
  private Integer lineNumber = null;

  @SerializedName("lineText")
  private String lineText = null;

  @SerializedName("indirect")
  private Boolean indirect = null;

  @SerializedName("file")
  private String file = null;

  @SerializedName("container")
  private String container = null;

  @SerializedName("localId")
  private Integer localId = null;

  @SerializedName("localParentId")
  private Integer localParentId = null;

  public DatapathData index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * Datapath index
   * @return index
  **/
  @ApiModelProperty(example = "1", value = "Datapath index")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public DatapathData kind(KindEnum kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Datapath kind
   * @return kind
  **/
  @ApiModelProperty(example = "sink", value = "Datapath kind")
  public KindEnum getKind() {
    return kind;
  }

  public void setKind(KindEnum kind) {
    this.kind = kind;
  }

  public DatapathData varname(String varname) {
    this.varname = varname;
    return this;
  }

   /**
   * Datapath tainted variable name
   * @return varname
  **/
  @ApiModelProperty(example = "user", value = "Datapath tainted variable name")
  public String getVarname() {
    return varname;
  }

  public void setVarname(String varname) {
    this.varname = varname;
  }

  public DatapathData lineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Line number
   * @return lineNumber
  **/
  @ApiModelProperty(example = "32", value = "Line number")
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
  }

  public DatapathData lineText(String lineText) {
    this.lineText = lineText;
    return this;
  }

   /**
   * Line text
   * @return lineText
  **/
  @ApiModelProperty(example = "   String val = request.getParameter(item);", value = "Line text")
  public String getLineText() {
    return lineText;
  }

  public void setLineText(String lineText) {
    this.lineText = lineText;
  }

  public DatapathData indirect(Boolean indirect) {
    this.indirect = indirect;
    return this;
  }

   /**
   * If is a indirect datapath
   * @return indirect
  **/
  @ApiModelProperty(example = "true", value = "If is a indirect datapath")
  public Boolean isIndirect() {
    return indirect;
  }

  public void setIndirect(Boolean indirect) {
    this.indirect = indirect;
  }

  public DatapathData file(String file) {
    this.file = file;
    return this;
  }

   /**
   * Datapath file
   * @return file
  **/
  @ApiModelProperty(example = "FileSystemRepository.java", value = "Datapath file")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public DatapathData container(String container) {
    this.container = container;
    return this;
  }

   /**
   * Container
   * @return container
  **/
  @ApiModelProperty(example = "java.util.Map sanitizeNull(java.util.List,javax.servlet.http.HttpServletRequest)", value = "Container")
  public String getContainer() {
    return container;
  }

  public void setContainer(String container) {
    this.container = container;
  }

  public DatapathData localId(Integer localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Local id for this vulnerability
   * @return localId
  **/
  @ApiModelProperty(example = "1", value = "Local id for this vulnerability")
  public Integer getLocalId() {
    return localId;
  }

  public void setLocalId(Integer localId) {
    this.localId = localId;
  }

  public DatapathData localParentId(Integer localParentId) {
    this.localParentId = localParentId;
    return this;
  }

   /**
   * Parent id of this datapath
   * @return localParentId
  **/
  @ApiModelProperty(example = "1", value = "Parent id of this datapath")
  public Integer getLocalParentId() {
    return localParentId;
  }

  public void setLocalParentId(Integer localParentId) {
    this.localParentId = localParentId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatapathData datapathData = (DatapathData) o;
    return Objects.equals(this.index, datapathData.index) &&
        Objects.equals(this.kind, datapathData.kind) &&
        Objects.equals(this.varname, datapathData.varname) &&
        Objects.equals(this.lineNumber, datapathData.lineNumber) &&
        Objects.equals(this.lineText, datapathData.lineText) &&
        Objects.equals(this.indirect, datapathData.indirect) &&
        Objects.equals(this.file, datapathData.file) &&
        Objects.equals(this.container, datapathData.container) &&
        Objects.equals(this.localId, datapathData.localId) &&
        Objects.equals(this.localParentId, datapathData.localParentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(index, kind, varname, lineNumber, lineText, indirect, file, container, localId, localParentId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatapathData {\n");
    
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    varname: ").append(toIndentedString(varname)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    lineText: ").append(toIndentedString(lineText)).append("\n");
    sb.append("    indirect: ").append(toIndentedString(indirect)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localParentId: ").append(toIndentedString(localParentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

